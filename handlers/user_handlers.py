from aiogram import Router, F
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.filters import Command, StateFilter
from sqlalchemy.future import select
from sqlalchemy.ext.asyncio import AsyncSession
from keyboards.buttons import cancel_button, get_help_menu_keyboard, back_help_menu_keyboard
from database import Track
from middlewares import SearchCallbackData, SearchState
import logging

user_router = Router()
logger = logging.getLogger(__name__)

search_callback = SearchCallbackData

@user_router.message(Command("start"))
async def user_start(message: Message):
    await show_user_menu(message.answer)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º message.answer –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    logger.info(f"üíô –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} ({message.from_user.id}) –≤—ã–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –¥–ª—è —é–∑–µ—Ä–æ–≤.")

@user_router.message(Command("menu"))
async def user_menu(message: Message):
    await show_user_menu(message.answer)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º message.answer –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    logger.info(f"üíô –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} ({message.from_user.id}) –≤—ã–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –¥–ª—è —é–∑–µ—Ä–æ–≤.")

async def show_user_menu(edit_function):
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="üéµ –ü–æ–∏—Å–∫ —Ç—Ä–µ–∫–æ–≤", switch_inline_query_current_chat=""),
                InlineKeyboardButton(text="üîç –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫", callback_data="start_search")
            ],
            [
                InlineKeyboardButton(text="ü™™ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="profile_button"),
                InlineKeyboardButton(text="üõçÔ∏è –ú–∞–≥–∞–∑–∏–Ω", callback_data="shop_button")
            ],
            [
                InlineKeyboardButton(text="üß† –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ò–ò", callback_data="ai_button"),
                InlineKeyboardButton(text="üÜò –ü–æ–º–æ—â—å", callback_data="help_button")
            ],
            [
                InlineKeyboardButton(text="üîó GitHub", url="https://github.com/Pavel8694/mikuplay"),
                InlineKeyboardButton(text="ü´∞ –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç", url="https://boosty.to/mikuplay")
                
            ],
        ]
    )
    await edit_function('üëã *–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å –≤ —Å–≤–æ–µ–π –º—É–∑—ã–∫–∞–ª—å–Ω–æ–π –æ–±–∏—Ç–µ–ª–∏, –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ò–Ω—Ç–µ—Ä–Ω–µ—Ç–∞!*\n\n'
                        'üëÄ _–¢–∞–∫-—Ç–∞–∫, –ø–æ—Å–º–æ—Ç—Ä–∏–º... –û–≥–æ! –ü–æ—Ö–æ–∂–µ, –≤—ã —è–≤–ª—è–µ—Ç–µ—Å—å –ø–æ—á—ë—Ç–Ω—ã–º –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–º –∑–¥–µ—Å—å! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ß—É–≤—Å—Ç–≤—É–π—Ç–µ —Å–µ–±—è –∫–∞–∫ –¥–æ–º–∞. ·ìö·òè·ó¢_\n\n'
                        'üí¨ *–ö—Å—Ç–∞—Ç–∏, —Ç—ã –º–æ–∂–µ—à—å –ø–æ–æ–±—â–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–π, –æ–±—Ä–∞—â–∞—è—Å—å –ø–æ –∏–º–µ–Ω–∏ –∏–ª–∏ –æ—Ç–≤–µ—á–∞—è –Ω–∞ –º–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü—Ä–∏–º–µ—Ä:* `–ú–∏–∫—É, –ø—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?` _(–£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –∏ –ò–ò —á–∏—Ç–∞–π—Ç–µ –≤ –º–µ–Ω—é "–ü–æ–º–æ—â—å")_\n\n'
                        'üíô *–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ—á—ë—Ç–Ω–æ–≥–æ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è:*',
                        reply_markup=keyboard,
                        parse_mode="Markdown"
                        )
    
@user_router.callback_query(F.data == "help_button")
async def show_help_menu(callback_query: CallbackQuery, state: FSMContext):
    logger.info(f"üÜò –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{callback_query.from_user.username} ({callback_query.from_user.id}) –∑–∞—à—ë–ª –≤ –º–µ–Ω—é –ø–æ–º–æ—â–∏.")
    await callback_query.message.edit_text('üíô *MikuPlayBot* `alpha 0.1.8` *"–ü–µ—Ä–≤—ã–π –ü–û–ò–°–ö –±—É–¥—É—â–µ–≥–æ"*\n\n'
                                           '_–û –ø—Ä–æ–µ–∫—Ç–µ: MikuPlay ‚Äî –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π open-source –±–æ—Ç —Å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º –¥–ª—è –æ–±—â–µ–Ω–∏—è (–Ω–µ–π—Ä–æ—Å–µ—Ç—å —Å –ª–∏—á–Ω–æ—Å—Ç—å—é –ú–∏–∫—É), –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ –∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –º—É–∑—ã–∫–∏ –≤ Telegram —Å–æ —Å–≤–æ–µ–π –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö, –ø–æ–ø–æ–ª–Ω—è–µ–º–æ–π –≤—Ä—É—á–Ω—É—é. –î–æ—Å—Ç—É–ø–µ–Ω inline-—Ä–µ–∂–∏–º –¥–ª—è –ø–æ–∏—Å–∫–∞. –†–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö, —Ç–∞–∫ –∏ –≤ –≥—Ä—É–ø–ø–∞—Ö._\n\n'
                                           'üß° *Powered by Meme Corp.*\n'
                                           'üìß *mikuplaybot@gmail.com*',
                                           parse_mode="Markdown",
                                           reply_markup=get_help_menu_keyboard
                                           )

@user_router.callback_query(F.data == "disclaimer_button")
async def show_help_menu(callback_query: CallbackQuery, state: FSMContext):
    logger.info(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{callback_query.from_user.username} ({callback_query.from_user.id}) –∑–∞—à—ë–ª –≤ –º–µ–Ω—é –¥–∏—Å–∫–ª–µ–π–º–µ—Ä–∞.")
    await callback_query.message.edit_text('‚ö†Ô∏è *–£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏ –¥–∏—Å–∫–ª–µ–π–º–µ—Ä:*\n'
                                           '*1.* –í—Å–µ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –≤ –¥–∞–Ω–Ω–æ–º –±–æ—Ç–µ, –±—ã–ª–∏ –≤–∑—è—Ç—ã –∏–∑ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è –æ–∑–Ω–∞–∫–æ–º–∏—Ç–µ–ª—å–Ω—ã—Ö —Ü–µ–ª–µ–π.\n'
                                           '*2.* –ú—ã –Ω–µ –ø–æ–æ—â—Ä—è–µ–º –ø–∏—Ä–∞—Ç—Å—Ç–≤–æ –∏ –≤—Å–µ–≥–¥–∞ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —á–µ—Ä–µ–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã —Å –ø–æ–¥–ø–∏—Å–∫–∞–º–∏. –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏ –∂–µ–ª–∞–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ª—é–±–∏–º–æ–≥–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è, –≤–∞—Å –Ω–∏—á—Ç–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ.\n'
                                           '*3.* –ú—ã –Ω–µ –Ω–µ—Å—ë–º –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –æ—Ç–≤–µ—Ç—ã –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –∏ –∑–∞ –∑–∞–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∫ –Ω–µ–π. –í—Å—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –∑–∞–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ª–µ–∂–∏—Ç –Ω–∞ —Å–∞–º–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö.\n'
                                           '*4.* –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ò–ò –≤ –¥–∞–Ω–Ω–æ–º –±–æ—Ç–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤ —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã—Ö —Ü–µ–ª—è—Ö, –∏ –æ—Ç–≤–µ—Ç—ã –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—à–∏–±–∫–∏/–æ—Ç—Å–µ–±—è—Ç–∏–Ω—É. –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –≤–∞–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.\n'
                                           '*5.* –ò—Å–ø–æ–ª—å–∑—É—è –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞, –≤—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å —ç—Ç–∏–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏ –¥–∏—Å–∫–ª–µ–π–º–µ—Ä–æ–º.',
                                           parse_mode="Markdown",
                                           reply_markup=back_help_menu_keyboard
                                           )

@user_router.callback_query(F.data == "dmca_button")
async def show_help_menu(callback_query: CallbackQuery, state: FSMContext):
    logger.info(f"¬©Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{callback_query.from_user.username} ({callback_query.from_user.id}) –∑–∞—à—ë–ª –≤ –º–µ–Ω—é DMCA.")
    await callback_query.message.edit_text('¬©Ô∏è *DMCA:*\n'
                                           '–ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ –≤–∞—à –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–¥–µ—Å—å, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –Ω–∞ –ø–æ—á—Ç—É mikuplaybot@gmail.com —Å –ø–æ–º–µ—Ç–∫–æ–π `–Ω–∞—Ä—É—à–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä—Å–∫–∏—Ö –ø—Ä–∞–≤` –∏–ª–∏ `DMCA`.',
                                           parse_mode="Markdown",
                                           reply_markup=back_help_menu_keyboard
                                           )
    
@user_router.callback_query(F.data == "profile_button")
async def show_help_menu(callback_query: CallbackQuery, state: FSMContext):
    logger.info(f"ü™™ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{callback_query.from_user.username} ({callback_query.from_user.id}) –∑–∞—à—ë–ª –≤ –º–µ–Ω—é –ø—Ä–æ—Ñ–∏–ª—è.")
    await callback_query.answer("ü™™ –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.", show_alert=True)
    
@user_router.callback_query(F.data == "shop_button")
async def show_help_menu(callback_query: CallbackQuery, state: FSMContext):
    logger.info(f"üõçÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{callback_query.from_user.username} ({callback_query.from_user.id}) –∑–∞—à—ë–ª –≤ –º–µ–Ω—é –º–∞–≥–∞–∑–∏–Ω–∞.")
    await callback_query.answer("üõçÔ∏è –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.", show_alert=True)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞ –ø–æ–∏—Å–∫–∞
@user_router.callback_query(F.data == "start_search")
async def start_search(callback_query: CallbackQuery, state: FSMContext):
    logger.info(f"üîç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{callback_query.from_user.username} ({callback_query.from_user.id}) –∑–∞—à—ë–ª –≤ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫ —Ç—Ä–µ–∫–æ–≤.")
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞
    await state.set_state(SearchState.waiting_for_query)
    await callback_query.message.edit_text(
        "üîç *–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω–æ–µ/—á–∞—Å—Ç–∏—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞, –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –∏–ª–∏ ID –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞.*\n\n‚úçÔ∏è *–ü—Ä–∏–º–µ—Ä –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏—è:* `Resist and Disorder`\nüë§ *–ü—Ä–∏–º–µ—Ä –¥–ª—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è:* `Rezodrone`\nüÜî *–ü—Ä–∏–º–µ—Ä –¥–ª—è ID:* `85`",
        parse_mode="Markdown",
        reply_markup=cancel_button,
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É
@user_router.message(StateFilter(SearchState.waiting_for_query))
async def handle_search_query(message: Message, session: AsyncSession, state: FSMContext):
    query = message.text.strip()
    if not query:
        await message.reply("‚ùå *–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞.*", parse_mode="Markdown")
        return

    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
        await search_tracks(message, session, query, page=1, send_new=True)
    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
        logger.error(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–º –ø–æ–∏—Å–∫–µ —Ç—Ä–µ–∫–æ–≤ –≤ —á–∞—Ç–µ {message.chat.id}: {e}")
        await message.reply("‚ö†Ô∏è *–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø–æ–∏—Å–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.*", parse_mode="Markdown")
    finally:
        await state.clear()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
@user_router.callback_query(search_callback.filter())
async def handle_search_pagination(callback_query: CallbackQuery, callback_data: SearchCallbackData, session: AsyncSession):
    query = callback_data.query
    page = callback_data.page

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    for row in callback_query.message.reply_markup.inline_keyboard:
        for button in row:
            if button.text and button.text.startswith("[") and button.text.endswith("]"):
                current_page = int(button.text.strip("[]"))
                if page == current_page:
                    await callback_query.answer("üìå –í—ã —É–∂–µ –Ω–∞ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ.", show_alert=False)
                    return

    try:
        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
        await search_tracks(callback_query.message, session, query, page, send_new=False)
    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
        logger.error(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ —Ç—Ä–µ–∫–æ–≤ –≤ —á–∞—Ç–µ {callback_query.message.chat.id}: {e}")
        await callback_query.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.", show_alert=True)
    finally:
        await callback_query.answer()

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ —Ç—Ä–µ–∫–æ–≤
async def search_tracks(message: Message, session: AsyncSession, query: str, page: int = 1, page_size: int = 10, send_new: bool = False):
    offset = (page - 1) * page_size
    results = []
    total_count = 0

    try:
        # –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å - —ç—Ç–æ —á–∏—Å–ª–æ–≤–æ–π ID, –∏—â–µ–º —Ç–æ–ª—å–∫–æ –ø–æ ID
        if query.isdigit():
            track_id = int(query)
            track_result = await session.execute(select(Track).where(Track.id == track_id))
            tracks = track_result.scalars().all()
            total_count = len(tracks)
        else:
            # –ò—â–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é
            track_result = await session.execute(
                select(Track)
                .where(
                    (Track.title_lower.ilike(f"%{query.lower()}%"))
                    | (Track.artist_lower.ilike(f"%{query.lower()}%"))
                )
                .offset(offset)
                .limit(page_size)
            )
            tracks = track_result.scalars().all()

            # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
            total_result = await session.execute(
                select(Track).where(
                    (Track.title_lower.ilike(f"%{query.lower()}%"))
                    | (Track.artist_lower.ilike(f"%{query.lower()}%"))
                )
            )
            total_count = len(total_result.scalars().all())

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
        if tracks:
            for track in tracks:
                results.append(
                    f"üéµ *ID:* `{track.id}`\n*–ù–∞–∑–≤–∞–Ω–∏–µ:* `{track.title}`\n*–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:* `{track.artist}`\n\n"
                )
            result_message = f"üíÅ‚Äç‚ôÄÔ∏è *–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞:*\n\nüìÑ _–°—Ç—Ä–∞–Ω–∏—Ü–∞ {page}/{(total_count + page_size - 1) // page_size}_\n\n" + "".join(results)
        else:
            result_message = "‚ùå *–¢—Ä–µ–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.*"

        # –°–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
        total_pages = (total_count + page_size - 1) // page_size
        keyboard = InlineKeyboardMarkup(inline_keyboard=[])

        # –ö–Ω–æ–ø–∫–∏ –±—ã—Å—Ç—Ä–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∏ —Å—Ç—Ä–∞–Ω–∏—Ü
        if total_pages > 1:
            row = []
            if page > 1:
                row.append(
                    InlineKeyboardButton(
                        text="‚èÆÔ∏è",
                        callback_data=SearchCallbackData(query=query, page=1).pack()
                    )
                )

            # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ 5 –∫–Ω–æ–ø–æ–∫ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü
            start_page = max(1, page - 2)
            end_page = min(total_pages, start_page + 4)

            for p in range(start_page, end_page + 1):
                row.append(
                    InlineKeyboardButton(
                        text=f"[{p}]" if p == page else str(p),
                        callback_data=SearchCallbackData(query=query, page=p).pack()
                    )
                )

            if page < total_pages:
                row.append(
                    InlineKeyboardButton(
                        text="‚è≠Ô∏è",
                        callback_data=SearchCallbackData(query=query, page=total_pages).pack()
                    )
                )

            keyboard.inline_keyboard.append(row)

        # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        keyboard.inline_keyboard.append([
            InlineKeyboardButton(
                text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                callback_data="back_to_menu"
            )
        ])

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Ç–µ–∫—É—â–µ–µ
        if send_new:
            await message.answer(result_message, parse_mode="Markdown", reply_markup=keyboard)
        else:
            await message.edit_text(result_message, parse_mode="Markdown", reply_markup=keyboard)

    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
        logger.error(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–º –ø–æ–∏—Å–∫–µ —Ç—Ä–µ–∫–æ–≤: {e}")
        raise

@user_router.message(Command("300bucks"))
async def three_hundred_bucks(message: Message):
    await message.reply_sticker(sticker="CAACAgIAAx0Cff1e_QABBWyeZ5J2lmJfS_jwMJCvgi4zBmZo-p8AAlkiAAKfBulKrMkUSVSLD-M2BA")
    logger.info(f"ü•ö –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} ({message.from_user.id}) –≤—ã–∑—ã–≤–∞–µ—Ç –ø–∞—Å—Ö–∞–ª–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–µ /300bucks.")

@user_router.message(Command("uhartem"))
async def uh_artem(message: Message):
    await message.reply_video(video="BAACAgIAAx0Cff1e_QABBZDcZ5lRBKXQhq_gfVIL3I3jPGpKS_0AAjMkAAIk2PFKFGSr57Eocj02BA")
    logger.info(f"ü•ö –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} ({message.from_user.id}) –≤—ã–∑—ã–≤–∞–µ—Ç –ø–∞—Å—Ö–∞–ª–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–µ /uhartem.")

@user_router.message(Command("meow1"))
async def meow_one(message: Message):
    await message.reply_photo(photo="AgACAgIAAx0Cff1e_QABBYhaZ5dkQL0-M8nzFDsLpUCQnefreUAAAivzMRtX2rhIm5ZoBNoaIy4BAAMCAAN5AAM2BA")
    logger.info(f"ü•ö –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} ({message.from_user.id}) –≤—ã–∑—ã–≤–∞–µ—Ç –ø–∞—Å—Ö–∞–ª–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–µ /meow1.")

@user_router.message(Command("meow2"))
async def meow_two(message: Message):
    await message.reply_sticker(sticker="CAACAgIAAx0Cff1e_QABBWtKZ5Jn-UmVstTiVs2dZg9ZFkUxKPAAAmhfAAI196lKPqUAAaJx38ApNgQ")
    logger.info(f"ü•ö –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} ({message.from_user.id}) –≤—ã–∑—ã–≤–∞–µ—Ç –ø–∞—Å—Ö–∞–ª–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–µ /meow2.")

@user_router.message(Command("hleb"))
async def hleb(message: Message):
    await message.reply_document(document="CgACAgIAAx0Cff1e_QABBXGoZ5OC4VxdklHfPdR7NdWyLllaGzQAAmlIAALREVlLZhWEYRK2J-I2BA")
    logger.info(f"ü•ö –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} ({message.from_user.id}) –≤—ã–∑—ã–≤–∞–µ—Ç –ø–∞—Å—Ö–∞–ª–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–µ /hleb.")
    
@user_router.message(Command("dante1"))
async def dante_one(message: Message):
    await message.reply_document(document="CgACAgIAAx0Cff1e_QABBeTWZ65fjCZYbGfHRxfFatDrh_TvI0UAAr5vAAJ0uVlJcAy-RkS5Nrc2BA")
    logger.info(f"ü•ö –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} ({message.from_user.id}) –≤—ã–∑—ã–≤–∞–µ—Ç –ø–∞—Å—Ö–∞–ª–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–µ /dante1.")
    
@user_router.message(Command("dante2"))
async def dante_two(message: Message):
    await message.reply_document(document="CgACAgQAAxkBAAJlKWe4WMRzeYpyfbds6mrFXWwmM18RAAIHBQAC0V59Uocj2rHW1Zb7NgQ")
    logger.info(f"ü•ö –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} ({message.from_user.id}) –≤—ã–∑—ã–≤–∞–µ—Ç –ø–∞—Å—Ö–∞–ª–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–µ /dante2.")

@user_router.message(Command("uwy"))
async def uwy(message: Message):
    await message.reply_sticker(sticker="CAACAgIAAx0Cff1e_QABBaKwZ53RO9uR-_K7HlQclQOcOePrwP4AAvNYAAKmMmhLgY19Cupue5g2BA")
    logger.info(f"ü•ö –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} ({message.from_user.id}) –≤—ã–∑—ã–≤–∞–µ—Ç –ø–∞—Å—Ö–∞–ª–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–µ /uwy.")

pivas_text = """
üç∫ <b>[–¢–µ–∫—Å—Ç –ø–µ—Å–Ω–∏ ¬´—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É—é –ø–∏–≤–∞—Å¬ª]</b> üçª

<b>[–ü—Ä–∏–ø–µ–≤]</b>
<b><i>–Ø –∫–∞–∂–¥—ã–π –≤–µ—á–µ—Ä –ø—å—é –ø–∏–≤–∞—Å
–î–≤–∞–¥—Ü–∞—Ç—å –ª–∏—Ç—Ä–æ–≤ –≤—Å–µ –∑–∞ —Ä–∞–∑
–ë–µ–∑ —Ç–µ–±—è, –±–µ–∑ —Ç–µ–±—è
–ë–µ–∑ —Ç–µ–±—è
–Ø –∫–∞–∂–¥—ã–π –≤–µ—á–µ—Ä –ø—å—é –ø–∏–≤–∞—Å
–î–≤–∞–¥—Ü–∞—Ç—å –ª–∏—Ç—Ä–æ–≤ –≤—Å–µ –∑–∞ —Ä–∞–∑
–ë–µ–∑ —Ç–µ–±—è, –±–µ–∑ —Ç–µ–±—è
–ë–µ–∑ —Ç–µ–±—è</i></b>

<b>[–ë—Ä–∏–¥–∂]</b>
<b><i>–£–π–¥–∏, –º–æ—è –ø–µ—á–µ–Ω—å –≤ –∂–∏–∑–Ω–∏ –≥–∞—Å–Ω–µ—Ç
–°—Ç–∞–Ω–æ–≤–ª—é—Å—å —Ö–æ–ª–æ–¥–Ω—ã–º
–ú–æ–ª—á–∏, –ø–∏–≤–æ –≤–µ—á–Ω–æ, –≤—Å—ë –Ω–µ –≤–∞–∂–Ω–æ
–Ø —É–º—Ä—É —Å–≤–æ–±–æ–¥–Ω—ã–º</i></b>

<b>[–ü—Ä–µ–¥–ø—Ä–∏–ø–µ–≤]</b>
<b><i>–Ø –Ω–µ –≤–∏–∂—É –ª–∏—Ü
–Ø –≤–∏–∂—É —Å–≤–æ—ë –ø–∏–≤–∫–æ
–ò —Å—Ä–µ–¥–∏ –≤—Å–µ–≥–æ —è –ª—é–±–ª—é —Ç–æ–ª—å–∫–æ –µ–≥–æ
–ü—Ä–æ—Å—Ç–æ –ø—Ä–µ–∫—Ä–∞—Ç–∏ –ø—Ä–æ-–ø—Ä–æ-–ø—Ä–æ—Ç—Ä–µ–∑–≤–ª—è—Ç—å –º–æ–∏ —ë–±–∞–Ω—ã–µ —Å–Ω—ã</i></b>

<b>[–ü—Ä–∏–ø–µ–≤]</b>
<b><i>–Ø –∫–∞–∂–¥—ã–π –≤–µ—á–µ—Ä –ø—å—é –ø–∏–≤–∞—Å
–î–≤–∞–¥—Ü–∞—Ç—å –ª–∏—Ç—Ä–æ–≤ –≤—Å–µ –∑–∞ —Ä–∞–∑
–ë–µ–∑ —Ç–µ–±—è, –±–µ–∑ —Ç–µ–±—è
–ë–µ–∑ —Ç–µ–±—è
–Ø –∫–∞–∂–¥—ã–π –≤–µ—á–µ—Ä –ø—å—é –ø–∏–≤–∞—Å
–î–≤–∞–¥—Ü–∞—Ç—å –ª–∏—Ç—Ä–æ–≤ –≤—Å–µ –∑–∞ —Ä–∞–∑
–ë–µ–∑ —Ç–µ–±—è, –±–µ–∑ —Ç–µ–±—è
–ë–µ–∑ —Ç–µ–±—è</i></b>

<b>[–ö—É–ø–ª–µ—Ç]</b>
<b><i>–í—Å–µ —ç—Ç–∏ –ª—é–¥–∏, —á—Ç–æ —è –æ–±–ª–µ–≤–∞–ª
–í–µ—Å—å —ç—Ç–æ—Ç –∫—Ä–∏–Ω–∂ –º–Ω–µ –ø–æ—Ä–∞ –±—ã –∑–∞–±—ã—Ç—å
–î—É–º–∞—é, —á—Ç–æ —è –æ—Å—Ç–∞–ª—Å—è –æ–¥–∏–Ω
–ù–æ —É–∂–µ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –±—É—Ö–∞—é –æ–¥–∏–Ω</i></b>

<b>[–ë—Ä–∏–¥–∂]</b>
<b><i>–£–π–¥–∏, –º–æ—è –ø–µ—á–µ–Ω—å –≤ –∂–∏–∑–Ω–∏ –≥–∞—Å–Ω–µ—Ç
–°—Ç–∞–Ω–æ–≤–ª—é—Å—å —Ö–æ–ª–æ–¥–Ω—ã–º
–ú–æ–ª—á–∏, –ø–∏–≤–æ –≤–µ—á–Ω–æ, –≤—Å—ë –Ω–µ –≤–∞–∂–Ω–æ
–Ø —É–º—Ä—É —Å–≤–æ–±–æ–¥–Ω—ã–º</i></b>

<b>[–ü—Ä–µ–¥–ø—Ä–∏–ø–µ–≤]</b>
<b><i>–Ø –Ω–µ –≤–∏–∂—É –ª–∏—Ü
–Ø –≤–∏–∂—É —Å–≤–æ—ë –ø–∏–≤–∫–æ
–ò —Å—Ä–µ–¥–∏ –≤—Å–µ–≥–æ —è –ª—é–±–ª—é —Ç–æ–ª—å–∫–æ –µ–≥–æ
–ü—Ä–æ—Å—Ç–æ –ø—Ä–µ–∫—Ä–∞—Ç–∏ –ø—Ä–æ-–ø—Ä–æ-–ø—Ä–æ—Ç—Ä–µ–∑–≤–ª—è—Ç—å –º–æ–∏ —ë–±–∞–Ω—ã–µ —Å–Ω—ã</i></b>

<b>[–ü—Ä–∏–ø–µ–≤]</b>
<b><i>–Ø –∫–∞–∂–¥—ã–π –≤–µ—á–µ—Ä –ø—å—é –ø–∏–≤–∞—Å
–î–≤–∞–¥—Ü–∞—Ç—å –ª–∏—Ç—Ä–æ–≤ –≤—Å–µ –∑–∞ —Ä–∞–∑
–ë–µ–∑ —Ç–µ–±—è, –±–µ–∑ —Ç–µ–±—è
–ë–µ–∑ —Ç–µ–±—è
–Ø –∫–∞–∂–¥—ã–π –≤–µ—á–µ—Ä –ø—å—é –ø–∏–≤–∞—Å
–î–≤–∞–¥—Ü–∞—Ç—å –ª–∏—Ç—Ä–æ–≤ –≤—Å–µ –∑–∞ —Ä–∞–∑
–ë–µ–∑ —Ç–µ–±—è, –±–µ–∑ —Ç–µ–±—è
–ë–µ–∑ —Ç–µ–±—è</i></b>

<b><i><a href="https://genius.com/2077-pivzavod2077-photographing-beer-lyrics">[–ò—Å—Ç–æ—á–Ω–∏–∫ —Ç–µ–∫—Å—Ç–∞]</a></i></b>
"""

@user_router.message(Command("pivas2077"))
async def pivas2077(message: Message):
    await message.reply(pivas_text,
                        parse_mode="HTML"
                        )
    logger.info(f"ü•ö –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} ({message.from_user.id}) –≤—ã–∑—ã–≤–∞–µ—Ç –ø–∞—Å—Ö–∞–ª–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–µ /pivas2077.")
